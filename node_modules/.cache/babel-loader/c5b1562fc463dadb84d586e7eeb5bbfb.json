{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constant.js';\nexport var setSearchField = function setSearchField(text) {\n  return {\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n  };\n};\nexport var requestRobots = function requestRobots(dispatch) {\n  dispatch({\n    type: REQUEST_ROBOTS_PENDING\n  });\n  fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    return dispatch({\n      type: REQUEST_ROBOTS_SUCCESS,\n      payload: data\n    });\n  }).catch(function (error) {\n    return dispatch({\n      type: REQUEST_ROBOTS_FAILED,\n      payload: error\n    });\n  });\n};","map":{"version":3,"sources":["/Users/janpalonci/Desktop/robofriends/src/actions.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","setSearchField","text","type","payload","requestRobots","dispatch","fetch","then","response","json","data","catch","error"],"mappings":"AAAA,SACCA,mBADD,EAECC,sBAFD,EAGCC,sBAHD,EAICC,qBAJD,QAKQ,eALR;AAOA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;AAAA,SAAW;AACxCC,IAAAA,IAAI,EAAEN,mBADkC;AAExCO,IAAAA,OAAO,EAAEF;AAF+B,GAAX;AAAA,CAAvB;AAKP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAc;AAC1CA,EAAAA,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAS,EAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACO,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GADf,EAECF,IAFD,CAEM,UAAAG,IAAI;AAAA,WAAIL,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAACJ,sBAAP;AAA+BK,MAAAA,OAAO,EAAEO;AAAxC,KAAD,CAAZ;AAAA,GAFV,EAGCC,KAHD,CAGO,UAAAC,KAAK;AAAA,WAAIP,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAACH,qBAAP;AAA8BI,MAAAA,OAAO,EAAES;AAAvC,KAAD,CAAZ;AAAA,GAHZ;AAIA,CANM","sourcesContent":["import { \n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_ROBOTS_PENDING,\n\tREQUEST_ROBOTS_SUCCESS,\n\tREQUEST_ROBOTS_FAILED\n } from './constant.js'\n\nexport const setSearchField = (text) => ({\n\ttype: CHANGE_SEARCH_FIELD,\n\tpayload: text\n})\n\nexport const requestRobots = (dispatch) => {\n\tdispatch({ type: REQUEST_ROBOTS_PENDING });\n\tfetch('https://jsonplaceholder.typicode.com/users')\n\t.then (response => response.json())\n\t.then(data => dispatch({ type:REQUEST_ROBOTS_SUCCESS, payload: data }))\n\t.catch(error => dispatch({ type:REQUEST_ROBOTS_FAILED, payload: error }))\n}"]},"metadata":{},"sourceType":"module"}