{"ast":null,"code":"import _classCallCheck from \"/Users/janpalonci/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/janpalonci/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/janpalonci/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/janpalonci/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/janpalonci/Desktop/robofriends/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/janpalonci/Desktop/robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport { setSearchField, requestRobots } from '../actions';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSearchChange: function onSearchChange(event) {\n      return dispatch(setSearchField(event.target.value));\n    },\n    onRequestRobots: function onRequestRobots() {\n      return dispatch(requestRobots());\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onRequestRobots();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChange = _this$props.onSearchChange,\n          robots = _this$props.robots,\n          isPending = _this$props.isPending;\n      var filteredRobots = robots.filter(function (robot) {\n        return robot.name.toLowerCase().includes(searchField.toLowerCase());\n      });\n      return isPending ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Loading\") : React.createElement(\"div\", {\n        className: \"tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"f1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"RoboFriends\"), React.createElement(SearchBox, {\n        searchChange: onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        robots: filteredRobots,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/janpalonci/Desktop/robofriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","setSearchField","requestRobots","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","props","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,WAAP;AAEA,SAAQC,cAAR,EAAwBC,aAAxB,QAA6C,YAA7C;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAChC,SAAO;AACNC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD1B;AAENE,IAAAA,MAAM,EAAEH,KAAK,CAACF,aAAN,CAAoBK,MAFtB;AAGNC,IAAAA,SAAS,EAAEJ,KAAK,CAACF,aAAN,CAAoBM,SAHzB;AAINC,IAAAA,KAAK,EAAEL,KAAK,CAACF,aAAN,CAAoBO;AAJrB,GAAP;AAMA,CAPD;;AASA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,SAAO;AACNC,IAAAA,cAAc,EAAE,wBAACC,KAAD;AAAA,aAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAAnB;AAAA,KADV;AAENC,IAAAA,eAAe,EAAE;AAAA,aAAML,QAAQ,CAACT,aAAa,EAAd,CAAd;AAAA;AAFX,GAAP;AAIA,CALD;;IAOMe,G;;;;;;;;;;;;;wCAGc;AACnB,WAAKC,KAAL,CAAWF,eAAX;AACA;;;6BAGQ;AAAA,wBACmD,KAAKE,KADxD;AAAA,UACAb,WADA,eACAA,WADA;AAAA,UACaO,cADb,eACaA,cADb;AAAA,UAC6BL,MAD7B,eAC6BA,MAD7B;AAAA,UACqCC,SADrC,eACqCA,SADrC;AAER,UAAMW,cAAc,GAAGZ,MAAM,CAACa,MAAP,CAAc,UAAAC,KAAK,EAAG;AAC5C,eAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCnB,WAAW,CAACkB,WAAZ,EAAlC,CAAP;AACA,OAFsB,CAAvB;AAGC,aAAOf,SAAS,GAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADgB,GAGf;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EAEC,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAEI,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,EAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEO,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAHD,CAHD;AAWA;;;;EAxBgBvB,S;;AA4BlB,eAAeC,OAAO,CAACM,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React, { Component }from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nimport{ setSearchField, requestRobots } from '../actions';\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tsearchField: state.searchRobots.searchField,\n\t\trobots: state.requestRobots.robots,\n\t\tisPending: state.requestRobots.isPending,\n\t\terror: state.requestRobots.error\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n\t\tonRequestRobots: () => dispatch(requestRobots())\n\t}\n}\n\nclass App extends Component {\n\n\ncomponentDidMount() {\n\tthis.props.onRequestRobots();\n}\n\n\nrender() {\n\tconst { searchField, onSearchChange, robots, isPending } = this.props;\n\tconst filteredRobots = robots.filter(robot =>{\n\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\n\t})\n\t\treturn isPending ? \n\t\t<h1>Loading</h1> :\n\t\t(\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange={onSearchChange} />\n\t\t\t\t<Scroll>\n\t\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t);\n\t}\n\t\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}